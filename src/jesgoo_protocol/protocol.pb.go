// Code generated by protoc-gen-go.
// source: protocol.proto
// DO NOT EDIT!

/*
Package jesgoo_protocol is a generated protocol buffer package.

It is generated from these files:
	protocol.proto

It has these top-level messages:
	Version
	Size
	App
	Site
	Browser
	Media
	WiFi
	Network
	DeviceID
	Device
	Geo
	Client
	AdSlot
	Event
*/
package jesgoo_protocol

import proto "code.google.com/p/goprotobuf/proto"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = math.Inf

// 设备类型
type DeviceType int32

const (
	DeviceType_UNKNOWN_DEVICE_TYPE DeviceType = 0
	DeviceType_PC                  DeviceType = 1
	DeviceType_PHONE               DeviceType = 2
	DeviceType_TABLET              DeviceType = 3
	DeviceType_TV                  DeviceType = 4
)

var DeviceType_name = map[int32]string{
	0: "UNKNOWN_DEVICE_TYPE",
	1: "PC",
	2: "PHONE",
	3: "TABLET",
	4: "TV",
}
var DeviceType_value = map[string]int32{
	"UNKNOWN_DEVICE_TYPE": 0,
	"PC":     1,
	"PHONE":  2,
	"TABLET": 3,
	"TV":     4,
}

func (x DeviceType) Enum() *DeviceType {
	p := new(DeviceType)
	*p = x
	return p
}
func (x DeviceType) String() string {
	return proto.EnumName(DeviceType_name, int32(x))
}
func (x *DeviceType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(DeviceType_value, data, "DeviceType")
	if err != nil {
		return err
	}
	*x = DeviceType(value)
	return nil
}

// 媒体类型
type MediaType int32

const (
	MediaType_APP MediaType = 1
	MediaType_WEB MediaType = 2
	MediaType_WAP MediaType = 3
)

var MediaType_name = map[int32]string{
	1: "APP",
	2: "WEB",
	3: "WAP",
}
var MediaType_value = map[string]int32{
	"APP": 1,
	"WEB": 2,
	"WAP": 3,
}

func (x MediaType) Enum() *MediaType {
	p := new(MediaType)
	*p = x
	return p
}
func (x MediaType) String() string {
	return proto.EnumName(MediaType_name, int32(x))
}
func (x *MediaType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(MediaType_value, data, "MediaType")
	if err != nil {
		return err
	}
	*x = MediaType(value)
	return nil
}

// 操作系统类型
type OSType int32

const (
	OSType_UNKNOWN_OS_TYPE OSType = 0
	OSType_ANDROID         OSType = 1
	OSType_IOS             OSType = 2
	OSType_WP              OSType = 3
)

var OSType_name = map[int32]string{
	0: "UNKNOWN_OS_TYPE",
	1: "ANDROID",
	2: "IOS",
	3: "WP",
}
var OSType_value = map[string]int32{
	"UNKNOWN_OS_TYPE": 0,
	"ANDROID":         1,
	"IOS":             2,
	"WP":              3,
}

func (x OSType) Enum() *OSType {
	p := new(OSType)
	*p = x
	return p
}
func (x OSType) String() string {
	return proto.EnumName(OSType_name, int32(x))
}
func (x *OSType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(OSType_value, data, "OSType")
	if err != nil {
		return err
	}
	*x = OSType(value)
	return nil
}

// 设备ID类型
type DeviceIDType int32

const (
	DeviceIDType_IMEI      DeviceIDType = 1
	DeviceIDType_MAC       DeviceIDType = 2
	DeviceIDType_IDFA      DeviceIDType = 3
	DeviceIDType_AAID      DeviceIDType = 4
	DeviceIDType_OPENUDID  DeviceIDType = 5
	DeviceIDType_ANDROIDID DeviceIDType = 6
	DeviceIDType_UDID      DeviceIDType = 7
	DeviceIDType_ODIN      DeviceIDType = 8
	DeviceIDType_DUID      DeviceIDType = 9
)

var DeviceIDType_name = map[int32]string{
	1: "IMEI",
	2: "MAC",
	3: "IDFA",
	4: "AAID",
	5: "OPENUDID",
	6: "ANDROIDID",
	7: "UDID",
	8: "ODIN",
	9: "DUID",
}
var DeviceIDType_value = map[string]int32{
	"IMEI":      1,
	"MAC":       2,
	"IDFA":      3,
	"AAID":      4,
	"OPENUDID":  5,
	"ANDROIDID": 6,
	"UDID":      7,
	"ODIN":      8,
	"DUID":      9,
}

func (x DeviceIDType) Enum() *DeviceIDType {
	p := new(DeviceIDType)
	*p = x
	return p
}
func (x DeviceIDType) String() string {
	return proto.EnumName(DeviceIDType_name, int32(x))
}
func (x *DeviceIDType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(DeviceIDType_value, data, "DeviceIDType")
	if err != nil {
		return err
	}
	*x = DeviceIDType(value)
	return nil
}

// 广告位类型
type AdSlotType int32

const (
	AdSlotType_BANNER          AdSlotType = 1
	AdSlotType_OFFERWALL       AdSlotType = 2
	AdSlotType_RECOMMEND       AdSlotType = 3
	AdSlotType_INTERSTITIAL    AdSlotType = 4
	AdSlotType_REALTIME_SPLASH AdSlotType = 5
	AdSlotType_CACHED_SPLASH   AdSlotType = 6
	AdSlotType_FEED            AdSlotType = 7
)

var AdSlotType_name = map[int32]string{
	1: "BANNER",
	2: "OFFERWALL",
	3: "RECOMMEND",
	4: "INTERSTITIAL",
	5: "REALTIME_SPLASH",
	6: "CACHED_SPLASH",
	7: "FEED",
}
var AdSlotType_value = map[string]int32{
	"BANNER":          1,
	"OFFERWALL":       2,
	"RECOMMEND":       3,
	"INTERSTITIAL":    4,
	"REALTIME_SPLASH": 5,
	"CACHED_SPLASH":   6,
	"FEED":            7,
}

func (x AdSlotType) Enum() *AdSlotType {
	p := new(AdSlotType)
	*p = x
	return p
}
func (x AdSlotType) String() string {
	return proto.EnumName(AdSlotType_name, int32(x))
}
func (x *AdSlotType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(AdSlotType_value, data, "AdSlotType")
	if err != nil {
		return err
	}
	*x = AdSlotType(value)
	return nil
}

// 广告风格
type AdStyle int32

const (
	AdStyle_TEXT      AdStyle = 1
	AdStyle_IMAGE     AdStyle = 2
	AdStyle_ICON_TEXT AdStyle = 3
	AdStyle_SMART_AD  AdStyle = 4
	AdStyle_VIDEO     AdStyle = 5
)

var AdStyle_name = map[int32]string{
	1: "TEXT",
	2: "IMAGE",
	3: "ICON_TEXT",
	4: "SMART_AD",
	5: "VIDEO",
}
var AdStyle_value = map[string]int32{
	"TEXT":      1,
	"IMAGE":     2,
	"ICON_TEXT": 3,
	"SMART_AD":  4,
	"VIDEO":     5,
}

func (x AdStyle) Enum() *AdStyle {
	p := new(AdStyle)
	*p = x
	return p
}
func (x AdStyle) String() string {
	return proto.EnumName(AdStyle_name, int32(x))
}
func (x *AdStyle) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(AdStyle_value, data, "AdStyle")
	if err != nil {
		return err
	}
	*x = AdStyle(value)
	return nil
}

// 广告推广类型
type PromotionType int32

const (
	PromotionType_NOACTION PromotionType = 0
	PromotionType_LP       PromotionType = 1
	PromotionType_DOWNLOAD PromotionType = 2
	PromotionType_DAIL     PromotionType = 3
	PromotionType_SMS      PromotionType = 4
	PromotionType_EMAIL    PromotionType = 5
)

var PromotionType_name = map[int32]string{
	0: "NOACTION",
	1: "LP",
	2: "DOWNLOAD",
	3: "DAIL",
	4: "SMS",
	5: "EMAIL",
}
var PromotionType_value = map[string]int32{
	"NOACTION": 0,
	"LP":       1,
	"DOWNLOAD": 2,
	"DAIL":     3,
	"SMS":      4,
	"EMAIL":    5,
}

func (x PromotionType) Enum() *PromotionType {
	p := new(PromotionType)
	*p = x
	return p
}
func (x PromotionType) String() string {
	return proto.EnumName(PromotionType_name, int32(x))
}
func (x *PromotionType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(PromotionType_value, data, "PromotionType")
	if err != nil {
		return err
	}
	*x = PromotionType(value)
	return nil
}

// 网络类型
type NetworkType int32

const (
	NetworkType_WIFI             NetworkType = 1
	NetworkType_CELLULAR_UNKNOWN NetworkType = 2
	NetworkType_CELLULAR_2G      NetworkType = 3
	NetworkType_CELLULAR_3G      NetworkType = 4
	NetworkType_CELLULAR_4G      NetworkType = 5
)

var NetworkType_name = map[int32]string{
	1: "WIFI",
	2: "CELLULAR_UNKNOWN",
	3: "CELLULAR_2G",
	4: "CELLULAR_3G",
	5: "CELLULAR_4G",
}
var NetworkType_value = map[string]int32{
	"WIFI":             1,
	"CELLULAR_UNKNOWN": 2,
	"CELLULAR_2G":      3,
	"CELLULAR_3G":      4,
	"CELLULAR_4G":      5,
}

func (x NetworkType) Enum() *NetworkType {
	p := new(NetworkType)
	*p = x
	return p
}
func (x NetworkType) String() string {
	return proto.EnumName(NetworkType_name, int32(x))
}
func (x *NetworkType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(NetworkType_value, data, "NetworkType")
	if err != nil {
		return err
	}
	*x = NetworkType(value)
	return nil
}

// 地理坐标类型
type GeoType int32

const (
	GeoType_WGS84 GeoType = 1
	GeoType_GCJ02 GeoType = 2
	GeoType_BD09  GeoType = 3
)

var GeoType_name = map[int32]string{
	1: "WGS84",
	2: "GCJ02",
	3: "BD09",
}
var GeoType_value = map[string]int32{
	"WGS84": 1,
	"GCJ02": 2,
	"BD09":  3,
}

func (x GeoType) Enum() *GeoType {
	p := new(GeoType)
	*p = x
	return p
}
func (x GeoType) String() string {
	return proto.EnumName(GeoType_name, int32(x))
}
func (x *GeoType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(GeoType_value, data, "GeoType")
	if err != nil {
		return err
	}
	*x = GeoType(value)
	return nil
}

// 广告客户端类型
type ClientType int32

const (
	ClientType_NATIVESDK ClientType = 1
	ClientType_JSSDK     ClientType = 2
	ClientType_OPENAPI   ClientType = 3
)

var ClientType_name = map[int32]string{
	1: "NATIVESDK",
	2: "JSSDK",
	3: "OPENAPI",
}
var ClientType_value = map[string]int32{
	"NATIVESDK": 1,
	"JSSDK":     2,
	"OPENAPI":   3,
}

func (x ClientType) Enum() *ClientType {
	p := new(ClientType)
	*p = x
	return p
}
func (x ClientType) String() string {
	return proto.EnumName(ClientType_name, int32(x))
}
func (x *ClientType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ClientType_value, data, "ClientType")
	if err != nil {
		return err
	}
	*x = ClientType(value)
	return nil
}

// 地理定位来源
type GeoSource int32

const (
	GeoSource_NATIVE GeoSource = 1
	GeoSource_BAIDU  GeoSource = 2
)

var GeoSource_name = map[int32]string{
	1: "NATIVE",
	2: "BAIDU",
}
var GeoSource_value = map[string]int32{
	"NATIVE": 1,
	"BAIDU":  2,
}

func (x GeoSource) Enum() *GeoSource {
	p := new(GeoSource)
	*p = x
	return p
}
func (x GeoSource) String() string {
	return proto.EnumName(GeoSource_name, int32(x))
}
func (x *GeoSource) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(GeoSource_value, data, "GeoSource")
	if err != nil {
		return err
	}
	*x = GeoSource(value)
	return nil
}

// 计费相关
type ChargeType int32

const (
	ChargeType_FREE ChargeType = 0
	ChargeType_CPC  ChargeType = 1
	ChargeType_CPM  ChargeType = 2
	ChargeType_CPA  ChargeType = 3
)

var ChargeType_name = map[int32]string{
	0: "FREE",
	1: "CPC",
	2: "CPM",
	3: "CPA",
}
var ChargeType_value = map[string]int32{
	"FREE": 0,
	"CPC":  1,
	"CPM":  2,
	"CPA":  3,
}

func (x ChargeType) Enum() *ChargeType {
	p := new(ChargeType)
	*p = x
	return p
}
func (x ChargeType) String() string {
	return proto.EnumName(ChargeType_name, int32(x))
}
func (x *ChargeType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ChargeType_value, data, "ChargeType")
	if err != nil {
		return err
	}
	*x = ChargeType(value)
	return nil
}

// 广告源相关
type Dsp int32

const (
	Dsp_JESGOO_DSP    Dsp = 1
	Dsp_BAIDU_DSP     Dsp = 2
	Dsp_AMAX_EXCHANGE Dsp = 3
	Dsp_TANX_EXCHANGE Dsp = 4
)

var Dsp_name = map[int32]string{
	1: "JESGOO_DSP",
	2: "BAIDU_DSP",
	3: "AMAX_EXCHANGE",
	4: "TANX_EXCHANGE",
}
var Dsp_value = map[string]int32{
	"JESGOO_DSP":    1,
	"BAIDU_DSP":     2,
	"AMAX_EXCHANGE": 3,
	"TANX_EXCHANGE": 4,
}

func (x Dsp) Enum() *Dsp {
	p := new(Dsp)
	*p = x
	return p
}
func (x Dsp) String() string {
	return proto.EnumName(Dsp_name, int32(x))
}
func (x *Dsp) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Dsp_value, data, "Dsp")
	if err != nil {
		return err
	}
	*x = Dsp(value)
	return nil
}

type Event_Head_CryptoType int32

const (
	Event_Head_JESGOO_BASE64 Event_Head_CryptoType = 0
)

var Event_Head_CryptoType_name = map[int32]string{
	0: "JESGOO_BASE64",
}
var Event_Head_CryptoType_value = map[string]int32{
	"JESGOO_BASE64": 0,
}

func (x Event_Head_CryptoType) Enum() *Event_Head_CryptoType {
	p := new(Event_Head_CryptoType)
	*p = x
	return p
}
func (x Event_Head_CryptoType) String() string {
	return proto.EnumName(Event_Head_CryptoType_name, int32(x))
}
func (x *Event_Head_CryptoType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Event_Head_CryptoType_value, data, "Event_Head_CryptoType")
	if err != nil {
		return err
	}
	*x = Event_Head_CryptoType(value)
	return nil
}

type Event_Body_EventType int32

const (
	// 基础事件范围 0 ~ 9
	Event_Body_CLICK      Event_Body_EventType = 0
	Event_Body_IMPRESSION Event_Body_EventType = 1
	Event_Body_ACTIVATION Event_Body_EventType = 2
	// SDK监控事件范围 10 ~ 29
	Event_Body_INSTALL_PACKAGES Event_Body_EventType = 10
)

var Event_Body_EventType_name = map[int32]string{
	0:  "CLICK",
	1:  "IMPRESSION",
	2:  "ACTIVATION",
	10: "INSTALL_PACKAGES",
}
var Event_Body_EventType_value = map[string]int32{
	"CLICK":            0,
	"IMPRESSION":       1,
	"ACTIVATION":       2,
	"INSTALL_PACKAGES": 10,
}

func (x Event_Body_EventType) Enum() *Event_Body_EventType {
	p := new(Event_Body_EventType)
	*p = x
	return p
}
func (x Event_Body_EventType) String() string {
	return proto.EnumName(Event_Body_EventType_name, int32(x))
}
func (x *Event_Body_EventType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Event_Body_EventType_value, data, "Event_Body_EventType")
	if err != nil {
		return err
	}
	*x = Event_Body_EventType(value)
	return nil
}

// 通用版本类型
type Version struct {
	Major            *uint32 `protobuf:"varint,1,req,name=major" json:"major,omitempty"`
	Minor            *uint32 `protobuf:"varint,2,opt,name=minor,def=0" json:"minor,omitempty"`
	Micro            *uint32 `protobuf:"varint,3,opt,name=micro,def=0" json:"micro,omitempty"`
	Build            *uint32 `protobuf:"varint,4,opt,name=build,def=0" json:"build,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Version) Reset()         { *m = Version{} }
func (m *Version) String() string { return proto.CompactTextString(m) }
func (*Version) ProtoMessage()    {}

const Default_Version_Minor uint32 = 0
const Default_Version_Micro uint32 = 0
const Default_Version_Build uint32 = 0

func (m *Version) GetMajor() uint32 {
	if m != nil && m.Major != nil {
		return *m.Major
	}
	return 0
}

func (m *Version) GetMinor() uint32 {
	if m != nil && m.Minor != nil {
		return *m.Minor
	}
	return Default_Version_Minor
}

func (m *Version) GetMicro() uint32 {
	if m != nil && m.Micro != nil {
		return *m.Micro
	}
	return Default_Version_Micro
}

func (m *Version) GetBuild() uint32 {
	if m != nil && m.Build != nil {
		return *m.Build
	}
	return Default_Version_Build
}

// 通用尺寸类型
type Size struct {
	Width            *uint32 `protobuf:"varint,1,req,name=width" json:"width,omitempty"`
	Height           *uint32 `protobuf:"varint,2,req,name=height" json:"height,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Size) Reset()         { *m = Size{} }
func (m *Size) String() string { return proto.CompactTextString(m) }
func (*Size) ProtoMessage()    {}

func (m *Size) GetWidth() uint32 {
	if m != nil && m.Width != nil {
		return *m.Width
	}
	return 0
}

func (m *Size) GetHeight() uint32 {
	if m != nil && m.Height != nil {
		return *m.Height
	}
	return 0
}

// 应用信息
// 联盟自有流量请求可不携带分类信息
type App struct {
	PackageName      *string  `protobuf:"bytes,1,req,name=package_name" json:"package_name,omitempty"`
	Categories       []uint32 `protobuf:"varint,2,rep,name=categories" json:"categories,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *App) Reset()         { *m = App{} }
func (m *App) String() string { return proto.CompactTextString(m) }
func (*App) ProtoMessage()    {}

func (m *App) GetPackageName() string {
	if m != nil && m.PackageName != nil {
		return *m.PackageName
	}
	return ""
}

func (m *App) GetCategories() []uint32 {
	if m != nil {
		return m.Categories
	}
	return nil
}

// 站点信息
// 联盟自有流量请求可不携带分类信息
type Site struct {
	Domain           []byte   `protobuf:"bytes,1,req,name=domain" json:"domain,omitempty"`
	Categories       []uint32 `protobuf:"varint,2,rep,name=categories" json:"categories,omitempty"`
	Url              []byte   `protobuf:"bytes,3,opt,name=url" json:"url,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *Site) Reset()         { *m = Site{} }
func (m *Site) String() string { return proto.CompactTextString(m) }
func (*Site) ProtoMessage()    {}

func (m *Site) GetDomain() []byte {
	if m != nil {
		return m.Domain
	}
	return nil
}

func (m *Site) GetCategories() []uint32 {
	if m != nil {
		return m.Categories
	}
	return nil
}

func (m *Site) GetUrl() []byte {
	if m != nil {
		return m.Url
	}
	return nil
}

// 浏览器
type Browser struct {
	UserAgent        *string `protobuf:"bytes,1,opt,name=user_agent" json:"user_agent,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Browser) Reset()         { *m = Browser{} }
func (m *Browser) String() string { return proto.CompactTextString(m) }
func (*Browser) ProtoMessage()    {}

func (m *Browser) GetUserAgent() string {
	if m != nil && m.UserAgent != nil {
		return *m.UserAgent
	}
	return ""
}

// 媒体信息
type Media struct {
	Id               *string    `protobuf:"bytes,1,req,name=id" json:"id,omitempty"`
	ChannelId        *string    `protobuf:"bytes,2,req,name=channel_id" json:"channel_id,omitempty"`
	Type             *MediaType `protobuf:"varint,3,req,name=type,enum=jesgoo.protocol.MediaType" json:"type,omitempty"`
	App              *App       `protobuf:"bytes,4,opt,name=app" json:"app,omitempty"`
	Site             *Site      `protobuf:"bytes,5,opt,name=site" json:"site,omitempty"`
	Browser          *Browser   `protobuf:"bytes,6,opt,name=browser" json:"browser,omitempty"`
	XXX_unrecognized []byte     `json:"-"`
}

func (m *Media) Reset()         { *m = Media{} }
func (m *Media) String() string { return proto.CompactTextString(m) }
func (*Media) ProtoMessage()    {}

func (m *Media) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *Media) GetChannelId() string {
	if m != nil && m.ChannelId != nil {
		return *m.ChannelId
	}
	return ""
}

func (m *Media) GetType() MediaType {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return MediaType_APP
}

func (m *Media) GetApp() *App {
	if m != nil {
		return m.App
	}
	return nil
}

func (m *Media) GetSite() *Site {
	if m != nil {
		return m.Site
	}
	return nil
}

func (m *Media) GetBrowser() *Browser {
	if m != nil {
		return m.Browser
	}
	return nil
}

// WiFi热点
type WiFi struct {
	Mac              *string `protobuf:"bytes,1,req,name=mac" json:"mac,omitempty"`
	Rssi             *int32  `protobuf:"varint,2,req,name=rssi" json:"rssi,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *WiFi) Reset()         { *m = WiFi{} }
func (m *WiFi) String() string { return proto.CompactTextString(m) }
func (*WiFi) ProtoMessage()    {}

func (m *WiFi) GetMac() string {
	if m != nil && m.Mac != nil {
		return *m.Mac
	}
	return ""
}

func (m *WiFi) GetRssi() int32 {
	if m != nil && m.Rssi != nil {
		return *m.Rssi
	}
	return 0
}

// 网络环境
type Network struct {
	Ip               *string      `protobuf:"bytes,1,opt,name=ip" json:"ip,omitempty"`
	Type             *NetworkType `protobuf:"varint,2,opt,name=type,enum=jesgoo.protocol.NetworkType" json:"type,omitempty"`
	CellularOperator *uint32      `protobuf:"varint,3,opt,name=cellular_operator" json:"cellular_operator,omitempty"`
	CellularId       *string      `protobuf:"bytes,4,opt,name=cellular_id" json:"cellular_id,omitempty"`
	Wifis            []*WiFi      `protobuf:"bytes,5,rep,name=wifis" json:"wifis,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *Network) Reset()         { *m = Network{} }
func (m *Network) String() string { return proto.CompactTextString(m) }
func (*Network) ProtoMessage()    {}

func (m *Network) GetIp() string {
	if m != nil && m.Ip != nil {
		return *m.Ip
	}
	return ""
}

func (m *Network) GetType() NetworkType {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return NetworkType_WIFI
}

func (m *Network) GetCellularOperator() uint32 {
	if m != nil && m.CellularOperator != nil {
		return *m.CellularOperator
	}
	return 0
}

func (m *Network) GetCellularId() string {
	if m != nil && m.CellularId != nil {
		return *m.CellularId
	}
	return ""
}

func (m *Network) GetWifis() []*WiFi {
	if m != nil {
		return m.Wifis
	}
	return nil
}

// 设备ID
// 精简ID针对有辅助字符的ID类型，如MAC和IDFA
type DeviceID struct {
	Type             *DeviceIDType `protobuf:"varint,1,req,name=type,enum=jesgoo.protocol.DeviceIDType" json:"type,omitempty"`
	Id               []byte        `protobuf:"bytes,2,req,name=id" json:"id,omitempty"`
	Compact          *bool         `protobuf:"varint,3,opt,name=compact,def=0" json:"compact,omitempty"`
	Md5              *bool         `protobuf:"varint,4,opt,name=md5,def=0" json:"md5,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *DeviceID) Reset()         { *m = DeviceID{} }
func (m *DeviceID) String() string { return proto.CompactTextString(m) }
func (*DeviceID) ProtoMessage()    {}

const Default_DeviceID_Compact bool = false
const Default_DeviceID_Md5 bool = false

func (m *DeviceID) GetType() DeviceIDType {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return DeviceIDType_IMEI
}

func (m *DeviceID) GetId() []byte {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *DeviceID) GetCompact() bool {
	if m != nil && m.Compact != nil {
		return *m.Compact
	}
	return Default_DeviceID_Compact
}

func (m *DeviceID) GetMd5() bool {
	if m != nil && m.Md5 != nil {
		return *m.Md5
	}
	return Default_DeviceID_Md5
}

// 设备信息
type Device struct {
	Type             *DeviceType `protobuf:"varint,1,req,name=type,enum=jesgoo.protocol.DeviceType" json:"type,omitempty"`
	Ids              []*DeviceID `protobuf:"bytes,2,rep,name=ids" json:"ids,omitempty"`
	OsType           *OSType     `protobuf:"varint,3,req,name=os_type,enum=jesgoo.protocol.OSType" json:"os_type,omitempty"`
	OsVersion        *Version    `protobuf:"bytes,4,req,name=os_version" json:"os_version,omitempty"`
	Brand            *string     `protobuf:"bytes,5,opt,name=brand" json:"brand,omitempty"`
	Model            *string     `protobuf:"bytes,6,opt,name=model" json:"model,omitempty"`
	ScreenSize       *Size       `protobuf:"bytes,7,opt,name=screen_size" json:"screen_size,omitempty"`
	ScreenDensity    *float64    `protobuf:"fixed64,8,opt,name=screen_density" json:"screen_density,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *Device) Reset()         { *m = Device{} }
func (m *Device) String() string { return proto.CompactTextString(m) }
func (*Device) ProtoMessage()    {}

func (m *Device) GetType() DeviceType {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return DeviceType_UNKNOWN_DEVICE_TYPE
}

func (m *Device) GetIds() []*DeviceID {
	if m != nil {
		return m.Ids
	}
	return nil
}

func (m *Device) GetOsType() OSType {
	if m != nil && m.OsType != nil {
		return *m.OsType
	}
	return OSType_UNKNOWN_OS_TYPE
}

func (m *Device) GetOsVersion() *Version {
	if m != nil {
		return m.OsVersion
	}
	return nil
}

func (m *Device) GetBrand() string {
	if m != nil && m.Brand != nil {
		return *m.Brand
	}
	return ""
}

func (m *Device) GetModel() string {
	if m != nil && m.Model != nil {
		return *m.Model
	}
	return ""
}

func (m *Device) GetScreenSize() *Size {
	if m != nil {
		return m.ScreenSize
	}
	return nil
}

func (m *Device) GetScreenDensity() float64 {
	if m != nil && m.ScreenDensity != nil {
		return *m.ScreenDensity
	}
	return 0
}

// 设备
type Geo struct {
	Type             *GeoType   `protobuf:"varint,1,req,name=type,enum=jesgoo.protocol.GeoType" json:"type,omitempty"`
	Longitude        *float64   `protobuf:"fixed64,2,req,name=longitude" json:"longitude,omitempty"`
	Latitude         *float64   `protobuf:"fixed64,3,req,name=latitude" json:"latitude,omitempty"`
	Timestampe       *uint32    `protobuf:"varint,4,opt,name=timestampe" json:"timestampe,omitempty"`
	Source           *GeoSource `protobuf:"varint,5,opt,name=source,enum=jesgoo.protocol.GeoSource" json:"source,omitempty"`
	XXX_unrecognized []byte     `json:"-"`
}

func (m *Geo) Reset()         { *m = Geo{} }
func (m *Geo) String() string { return proto.CompactTextString(m) }
func (*Geo) ProtoMessage()    {}

func (m *Geo) GetType() GeoType {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return GeoType_WGS84
}

func (m *Geo) GetLongitude() float64 {
	if m != nil && m.Longitude != nil {
		return *m.Longitude
	}
	return 0
}

func (m *Geo) GetLatitude() float64 {
	if m != nil && m.Latitude != nil {
		return *m.Latitude
	}
	return 0
}

func (m *Geo) GetTimestampe() uint32 {
	if m != nil && m.Timestampe != nil {
		return *m.Timestampe
	}
	return 0
}

func (m *Geo) GetSource() GeoSource {
	if m != nil && m.Source != nil {
		return *m.Source
	}
	return GeoSource_NATIVE
}

// 广告客户端
type Client struct {
	Type             *ClientType `protobuf:"varint,1,req,name=type,enum=jesgoo.protocol.ClientType" json:"type,omitempty"`
	Version          *Version    `protobuf:"bytes,2,req,name=version" json:"version,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *Client) Reset()         { *m = Client{} }
func (m *Client) String() string { return proto.CompactTextString(m) }
func (*Client) ProtoMessage()    {}

func (m *Client) GetType() ClientType {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ClientType_NATIVESDK
}

func (m *Client) GetVersion() *Version {
	if m != nil {
		return m.Version
	}
	return nil
}

// 广告位信息
type AdSlot struct {
	Id               *string         `protobuf:"bytes,1,req,name=id" json:"id,omitempty"`
	Type             *AdSlotType     `protobuf:"varint,2,req,name=type,enum=jesgoo.protocol.AdSlotType" json:"type,omitempty"`
	Size             *Size           `protobuf:"bytes,3,req,name=size" json:"size,omitempty"`
	Styles           []AdStyle       `protobuf:"varint,4,rep,name=styles,enum=jesgoo.protocol.AdStyle" json:"styles,omitempty"`
	Capacity         *uint32         `protobuf:"varint,5,opt,name=capacity,def=1" json:"capacity,omitempty"`
	Templates        []uint32        `protobuf:"varint,6,rep,name=templates" json:"templates,omitempty"`
	Promotions       []PromotionType `protobuf:"varint,7,rep,name=promotions,enum=jesgoo.protocol.PromotionType" json:"promotions,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *AdSlot) Reset()         { *m = AdSlot{} }
func (m *AdSlot) String() string { return proto.CompactTextString(m) }
func (*AdSlot) ProtoMessage()    {}

const Default_AdSlot_Capacity uint32 = 1

func (m *AdSlot) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *AdSlot) GetType() AdSlotType {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return AdSlotType_BANNER
}

func (m *AdSlot) GetSize() *Size {
	if m != nil {
		return m.Size
	}
	return nil
}

func (m *AdSlot) GetStyles() []AdStyle {
	if m != nil {
		return m.Styles
	}
	return nil
}

func (m *AdSlot) GetCapacity() uint32 {
	if m != nil && m.Capacity != nil {
		return *m.Capacity
	}
	return Default_AdSlot_Capacity
}

func (m *AdSlot) GetTemplates() []uint32 {
	if m != nil {
		return m.Templates
	}
	return nil
}

func (m *AdSlot) GetPromotions() []PromotionType {
	if m != nil {
		return m.Promotions
	}
	return nil
}

type Event struct {
	Head             *Event_Head `protobuf:"bytes,1,req,name=head" json:"head,omitempty"`
	Body             *Event_Body `protobuf:"bytes,2,req,name=body" json:"body,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *Event) Reset()         { *m = Event{} }
func (m *Event) String() string { return proto.CompactTextString(m) }
func (*Event) ProtoMessage()    {}

func (m *Event) GetHead() *Event_Head {
	if m != nil {
		return m.Head
	}
	return nil
}

func (m *Event) GetBody() *Event_Body {
	if m != nil {
		return m.Body
	}
	return nil
}

type Event_Head struct {
	CryptoType       *Event_Head_CryptoType `protobuf:"varint,1,req,name=crypto_type,enum=jesgoo.protocol.Event_Head_CryptoType" json:"crypto_type,omitempty"`
	CryptoParam      *uint32                `protobuf:"varint,2,req,name=crypto_param" json:"crypto_param,omitempty"`
	XXX_unrecognized []byte                 `json:"-"`
}

func (m *Event_Head) Reset()         { *m = Event_Head{} }
func (m *Event_Head) String() string { return proto.CompactTextString(m) }
func (*Event_Head) ProtoMessage()    {}

func (m *Event_Head) GetCryptoType() Event_Head_CryptoType {
	if m != nil && m.CryptoType != nil {
		return *m.CryptoType
	}
	return Event_Head_JESGOO_BASE64
}

func (m *Event_Head) GetCryptoParam() uint32 {
	if m != nil && m.CryptoParam != nil {
		return *m.CryptoParam
	}
	return 0
}

type Event_Body struct {
	Type            *Event_Body_EventType `protobuf:"varint,1,req,name=type,enum=jesgoo.protocol.Event_Body_EventType" json:"type,omitempty"`
	SearchId        *string               `protobuf:"bytes,2,req,name=search_id" json:"search_id,omitempty"`
	SearchTimestamp *uint32               `protobuf:"varint,3,req,name=search_timestamp" json:"search_timestamp,omitempty"`
	SearchIp        *uint32               `protobuf:"varint,4,opt,name=search_ip" json:"search_ip,omitempty"`
	EventTimestamp  *uint32               `protobuf:"varint,5,opt,name=event_timestamp" json:"event_timestamp,omitempty"`
	EventIp         *uint32               `protobuf:"varint,6,opt,name=event_ip" json:"event_ip,omitempty"`
	Media           *Event_Body_Media     `protobuf:"bytes,7,opt,name=media" json:"media,omitempty"`
	Region          *Event_Body_Region    `protobuf:"bytes,8,opt,name=region" json:"region,omitempty"`
	Ad              *Event_Body_Ad        `protobuf:"bytes,9,opt,name=ad" json:"ad,omitempty"`
	Charge          *Event_Body_Charge    `protobuf:"bytes,10,opt,name=charge" json:"charge,omitempty"`
	Dsp             *Dsp                  `protobuf:"varint,11,opt,name=dsp,enum=jesgoo.protocol.Dsp" json:"dsp,omitempty"`
	Action          *Event_Body_Action    `protobuf:"bytes,12,opt,name=action" json:"action,omitempty"`
	Apps            []*Event_Body_App     `protobuf:"bytes,13,rep,name=apps" json:"apps,omitempty"`
	// 特殊标记位范围 100 ~ 999
	Debug            *bool  `protobuf:"varint,100,opt,name=debug,def=0" json:"debug,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *Event_Body) Reset()         { *m = Event_Body{} }
func (m *Event_Body) String() string { return proto.CompactTextString(m) }
func (*Event_Body) ProtoMessage()    {}

const Default_Event_Body_Debug bool = false

func (m *Event_Body) GetType() Event_Body_EventType {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return Event_Body_CLICK
}

func (m *Event_Body) GetSearchId() string {
	if m != nil && m.SearchId != nil {
		return *m.SearchId
	}
	return ""
}

func (m *Event_Body) GetSearchTimestamp() uint32 {
	if m != nil && m.SearchTimestamp != nil {
		return *m.SearchTimestamp
	}
	return 0
}

func (m *Event_Body) GetSearchIp() uint32 {
	if m != nil && m.SearchIp != nil {
		return *m.SearchIp
	}
	return 0
}

func (m *Event_Body) GetEventTimestamp() uint32 {
	if m != nil && m.EventTimestamp != nil {
		return *m.EventTimestamp
	}
	return 0
}

func (m *Event_Body) GetEventIp() uint32 {
	if m != nil && m.EventIp != nil {
		return *m.EventIp
	}
	return 0
}

func (m *Event_Body) GetMedia() *Event_Body_Media {
	if m != nil {
		return m.Media
	}
	return nil
}

func (m *Event_Body) GetRegion() *Event_Body_Region {
	if m != nil {
		return m.Region
	}
	return nil
}

func (m *Event_Body) GetAd() *Event_Body_Ad {
	if m != nil {
		return m.Ad
	}
	return nil
}

func (m *Event_Body) GetCharge() *Event_Body_Charge {
	if m != nil {
		return m.Charge
	}
	return nil
}

func (m *Event_Body) GetDsp() Dsp {
	if m != nil && m.Dsp != nil {
		return *m.Dsp
	}
	return Dsp_JESGOO_DSP
}

func (m *Event_Body) GetAction() *Event_Body_Action {
	if m != nil {
		return m.Action
	}
	return nil
}

func (m *Event_Body) GetApps() []*Event_Body_App {
	if m != nil {
		return m.Apps
	}
	return nil
}

func (m *Event_Body) GetDebug() bool {
	if m != nil && m.Debug != nil {
		return *m.Debug
	}
	return Default_Event_Body_Debug
}

type Event_Body_Region struct {
	Country          *uint32 `protobuf:"varint,1,req,name=country" json:"country,omitempty"`
	Province         *uint32 `protobuf:"varint,2,req,name=province" json:"province,omitempty"`
	City             *uint32 `protobuf:"varint,3,req,name=city" json:"city,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Event_Body_Region) Reset()         { *m = Event_Body_Region{} }
func (m *Event_Body_Region) String() string { return proto.CompactTextString(m) }
func (*Event_Body_Region) ProtoMessage()    {}

func (m *Event_Body_Region) GetCountry() uint32 {
	if m != nil && m.Country != nil {
		return *m.Country
	}
	return 0
}

func (m *Event_Body_Region) GetProvince() uint32 {
	if m != nil && m.Province != nil {
		return *m.Province
	}
	return 0
}

func (m *Event_Body_Region) GetCity() uint32 {
	if m != nil && m.City != nil {
		return *m.City
	}
	return 0
}

type Event_Body_Media struct {
	MediaId          *string `protobuf:"bytes,1,req,name=media_id" json:"media_id,omitempty"`
	ChannelId        *string `protobuf:"bytes,2,opt,name=channel_id" json:"channel_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Event_Body_Media) Reset()         { *m = Event_Body_Media{} }
func (m *Event_Body_Media) String() string { return proto.CompactTextString(m) }
func (*Event_Body_Media) ProtoMessage()    {}

func (m *Event_Body_Media) GetMediaId() string {
	if m != nil && m.MediaId != nil {
		return *m.MediaId
	}
	return ""
}

func (m *Event_Body_Media) GetChannelId() string {
	if m != nil && m.ChannelId != nil {
		return *m.ChannelId
	}
	return ""
}

type Event_Body_Ad struct {
	UserId           *uint32 `protobuf:"varint,1,opt,name=user_id" json:"user_id,omitempty"`
	PlanId           *uint32 `protobuf:"varint,2,opt,name=plan_id" json:"plan_id,omitempty"`
	GroupId          *uint32 `protobuf:"varint,3,opt,name=group_id" json:"group_id,omitempty"`
	ProductId        *uint32 `protobuf:"varint,4,opt,name=product_id" json:"product_id,omitempty"`
	UnitId           *uint32 `protobuf:"varint,5,opt,name=unit_id" json:"unit_id,omitempty"`
	TemplateId       *uint32 `protobuf:"varint,6,opt,name=template_id" json:"template_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Event_Body_Ad) Reset()         { *m = Event_Body_Ad{} }
func (m *Event_Body_Ad) String() string { return proto.CompactTextString(m) }
func (*Event_Body_Ad) ProtoMessage()    {}

func (m *Event_Body_Ad) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *Event_Body_Ad) GetPlanId() uint32 {
	if m != nil && m.PlanId != nil {
		return *m.PlanId
	}
	return 0
}

func (m *Event_Body_Ad) GetGroupId() uint32 {
	if m != nil && m.GroupId != nil {
		return *m.GroupId
	}
	return 0
}

func (m *Event_Body_Ad) GetProductId() uint32 {
	if m != nil && m.ProductId != nil {
		return *m.ProductId
	}
	return 0
}

func (m *Event_Body_Ad) GetUnitId() uint32 {
	if m != nil && m.UnitId != nil {
		return *m.UnitId
	}
	return 0
}

func (m *Event_Body_Ad) GetTemplateId() uint32 {
	if m != nil && m.TemplateId != nil {
		return *m.TemplateId
	}
	return 0
}

type Event_Body_Charge struct {
	Type             *ChargeType `protobuf:"varint,1,req,name=type,enum=jesgoo.protocol.ChargeType" json:"type,omitempty"`
	Price            *uint32     `protobuf:"varint,2,req,name=price" json:"price,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *Event_Body_Charge) Reset()         { *m = Event_Body_Charge{} }
func (m *Event_Body_Charge) String() string { return proto.CompactTextString(m) }
func (*Event_Body_Charge) ProtoMessage()    {}

func (m *Event_Body_Charge) GetType() ChargeType {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ChargeType_FREE
}

func (m *Event_Body_Charge) GetPrice() uint32 {
	if m != nil && m.Price != nil {
		return *m.Price
	}
	return 0
}

type Event_Body_Action struct {
	TargetUrl        *string `protobuf:"bytes,1,opt,name=target_url" json:"target_url,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Event_Body_Action) Reset()         { *m = Event_Body_Action{} }
func (m *Event_Body_Action) String() string { return proto.CompactTextString(m) }
func (*Event_Body_Action) ProtoMessage()    {}

func (m *Event_Body_Action) GetTargetUrl() string {
	if m != nil && m.TargetUrl != nil {
		return *m.TargetUrl
	}
	return ""
}

type Event_Body_App struct {
	PackageName      *string  `protobuf:"bytes,1,req,name=package_name" json:"package_name,omitempty"`
	InstallTime      *uint32  `protobuf:"varint,2,opt,name=install_time" json:"install_time,omitempty"`
	UpdateTime       *uint32  `protobuf:"varint,3,opt,name=update_time" json:"update_time,omitempty"`
	LastRunningTime  *uint32  `protobuf:"varint,4,opt,name=last_running_time" json:"last_running_time,omitempty"`
	Version          *Version `protobuf:"bytes,5,opt,name=version" json:"version,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *Event_Body_App) Reset()         { *m = Event_Body_App{} }
func (m *Event_Body_App) String() string { return proto.CompactTextString(m) }
func (*Event_Body_App) ProtoMessage()    {}

func (m *Event_Body_App) GetPackageName() string {
	if m != nil && m.PackageName != nil {
		return *m.PackageName
	}
	return ""
}

func (m *Event_Body_App) GetInstallTime() uint32 {
	if m != nil && m.InstallTime != nil {
		return *m.InstallTime
	}
	return 0
}

func (m *Event_Body_App) GetUpdateTime() uint32 {
	if m != nil && m.UpdateTime != nil {
		return *m.UpdateTime
	}
	return 0
}

func (m *Event_Body_App) GetLastRunningTime() uint32 {
	if m != nil && m.LastRunningTime != nil {
		return *m.LastRunningTime
	}
	return 0
}

func (m *Event_Body_App) GetVersion() *Version {
	if m != nil {
		return m.Version
	}
	return nil
}

func init() {
	proto.RegisterEnum("jesgoo.protocol.DeviceType", DeviceType_name, DeviceType_value)
	proto.RegisterEnum("jesgoo.protocol.MediaType", MediaType_name, MediaType_value)
	proto.RegisterEnum("jesgoo.protocol.OSType", OSType_name, OSType_value)
	proto.RegisterEnum("jesgoo.protocol.DeviceIDType", DeviceIDType_name, DeviceIDType_value)
	proto.RegisterEnum("jesgoo.protocol.AdSlotType", AdSlotType_name, AdSlotType_value)
	proto.RegisterEnum("jesgoo.protocol.AdStyle", AdStyle_name, AdStyle_value)
	proto.RegisterEnum("jesgoo.protocol.PromotionType", PromotionType_name, PromotionType_value)
	proto.RegisterEnum("jesgoo.protocol.NetworkType", NetworkType_name, NetworkType_value)
	proto.RegisterEnum("jesgoo.protocol.GeoType", GeoType_name, GeoType_value)
	proto.RegisterEnum("jesgoo.protocol.ClientType", ClientType_name, ClientType_value)
	proto.RegisterEnum("jesgoo.protocol.GeoSource", GeoSource_name, GeoSource_value)
	proto.RegisterEnum("jesgoo.protocol.ChargeType", ChargeType_name, ChargeType_value)
	proto.RegisterEnum("jesgoo.protocol.Dsp", Dsp_name, Dsp_value)
	proto.RegisterEnum("jesgoo.protocol.Event_Head_CryptoType", Event_Head_CryptoType_name, Event_Head_CryptoType_value)
	proto.RegisterEnum("jesgoo.protocol.Event_Body_EventType", Event_Body_EventType_name, Event_Body_EventType_value)
}
